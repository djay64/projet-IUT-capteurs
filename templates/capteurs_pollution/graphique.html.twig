{% extends 'base.html.twig' %}

        {% block stylesheets %}  
            {{ encore_entry_link_tags('page-graphique') }}
            <script src="Chart.js"></script>
         {% endblock %}


{% block body %}

 
<div class="container-fluid ">
  <div class="row mt-5 mx-5">
    <div class="col-lg-3 col-md-12 col-sm-12">
        <div class="container-fluid background-container-section overflow-filtre px-4 ">
        {{form_start(selectionFiltres)}}

            <div class="col-lg-12 background-subcontainer-section px-4">
                {{form_widget(selectionFiltres.titre)}}
            </div>

            <div class="col-lg-12 mt-4 background-subcontainer-section px-4">
            <div>
                {{form_widget(selectionFiltres.dateDebut)}}
            </div> 
            <div class="mt-2">
                {{form_widget(selectionFiltres.dateFin)}}
            </div>
            </div>

            <div class="col-lg-12 mt-4 background-subcontainer-section px-4">
             {{form_widget(selectionFiltres.typeParticule)}}
            </div>

            <div class="col-lg-12 mt-4 background-subcontainer-section px-4">
             {{form_widget(selectionFiltres.capteurs)}}
            </div>

            <div class="col-lg-12 my-4 background-subcontainer-section px-4">
             {{form_widget(selectionFiltres.typeGraphique)}}
            </div>
           
        </div>
    </div>

    <div class="col-lg-9 col-md-8 col-sm-12 pl-5">
        <div class="row background-container-section px-4 overflow-filtre">
            
            <div class="col-lg-12 ">
                <div class="d-flex justify-content-end pr-5">
    <div style="width:300%">
        <canvas id="myChart" width="100%" height="50%"></canvas>
    </div>

        {% set i = 0 %}
    
    <script language="javascript">
        
        
        //instanciation  de l'élément graphique
        var ctx = document.getElementById('myChart').getContext('2d');
    
    
    /***************************************************************
    ********** GESTION GRAPHIQUE LIGNE ET BARRE  ET RADAR***********
    ****************************************************************/
           
       var labels = [];
       //déterminer le nombre de jours sélectionnés
       var dateDebutDate = new Date('{{dateDebutDate}}');
       var dateFinDate = new Date('{{dateFinDate}}');
       var nbJours = (dateFinDate.getTime() - dateDebutDate.getTime()) /86400000 +1;
       
       var indice = '{{dateDebut}}';
       //pour ajouter un 0 aux mois de janvier à septembre
       if (indice.length <= 3){
           indice = '0' + indice;
       }
       //déclaration des tableaux qui vont contenir les relevés, et les couleurs
       var relevesPm10 = Array();
        var backgroundPm10 = Array();
        var borderPm10 = Array();
        var relevesPm25 = Array();
        var backgroundPm25 = Array();
        var borderPm25 = Array();

       //création des éléments de construction du graphique en guidant la construction en fonction d'un affichage en heures, en jours,ou en mois
       
       /* Présentation en heures si il y a moins de 3 jours de sélectionnés */
       if(nbJours<4){

        //création du tableau des labels 
            var jour = indice.substring(2,4);
            var mois = indice.substring(0,2);
            var heure = new Date().getHours();
            var heurePourLeTableau = heure;
            for(var i = 0; i <= parseInt(heure)+(24*(nbJours-1)); i++){
                if(-(parseInt(heure)-parseInt(heurePourLeTableau)) == 24){
                    heurePourLeTableau = heure;
                    jour ++;
                    if(jour <10){
                        jour = "0" + jour;
                    }
                if((mois == "01" || mois =="03" || mois =="05" || mois =="07" || mois == "08" || mois == "10" || mois == "12") && jour == 32){
                    mois ++;
                    if(mois != 10 || mois != 12){
                        mois = "0" +mois;
                    }
                    jour = "01";
                }else if (mois == "02" && parseInt(jour) == 28){
                    mois ++;
                    mois = "0" +mois;
                    jour = "01";
                }else if((mois == "04" || mois =="06" || mois =="09" || mois =="11") && jour == 31){
                    mois ++;
                    if(mois != 11){
                        mois = "0" +mois;
                }
                jour = "01";
            }
        }
        labels[i] = -(parseInt(heure)-parseInt(heurePourLeTableau))+'H le '+jour+'/'+mois;
        heurePourLeTableau = parseInt(heurePourLeTableau)+1;
    }
        
        //création des tableaux de releves et de couleur de fond
            
            var i = 0;
            
            '{% for rel in relevesPm10 %}'
                '{% for r in rel %}'
                    relevesPm10[i] = '{{r}}';
                    backgroundPm10[i] = 'rgba(255, 99, 132, 0.2)';
                    borderPm10[i] = 'rgba(255, 99, 132, 1)';
                    i++;
                '{% endfor %}'
            '{% endfor %}'

           
            var i = 0;
            '{% for rel in relevesPm25 %}'
                '{% for r in rel %}'
                    relevesPm25[i] = '{{r}}';
                    backgroundPm25[i] = 'rgba(99, 255, 132, 0.2)';
                    borderPm25[i] = 'rgba(99, 255, 132, 0.2)';
                    i++;
                '{% endfor %}'
            '{% endfor %}'
       }

       /* Présentation en jours si il y a moins de 1 mois de sélectionné */
       else if(nbJours<32){
           
           //création du tableau des labels 
           var jour = indice.substring(2,4);
           var mois = indice.substring(0,2);
 
           for(var i = 0; i < nbJours; i++){
               if((mois == "01" || mois =="03" || mois =="05" || mois =="07" || mois == "08" || mois == "10" || mois == "12") && jour == 32){
                   mois ++;
                   jour = "01";
               }else if (mois == "02" && parseInt(jour) == 28){
                   mois ++;
                   jour = "01";
               }else if((mois == "04" || mois =="06" || mois =="09" || mois =="11") && jour == 31){
                    mois ++;
                   jour = "01";
               }
               labels[i] = jour +'/'+mois;
                jour++;
            }
        //création des tableaux de releves et de couleur de fond
            
            var tableauRecueil= Array();
            var i =0;
            '{% for rel in relevesPm10 %}'
                '{% for r in rel %}'
                       tableauRecueil[i]='{{r}}';
                       i++;
                '{% endfor %}'
            '{% endfor %}'

            if(tableauRecueil != ""){
                for(var i=0;i<=nbJours;i++){
                    relevesPm10[i]=0;
                }

                var debut = 0;
                var fin = parseInt(tableauRecueil.length/(nbJours));
                var j;
                for(i=0;i<=nbJours;i++){
                    for(j=debut;j<fin;j++){
                            relevesPm10[i]+=parseInt(tableauRecueil[j]);
                    }                
                    relevesPm10[i] = parseInt(relevesPm10[i])/parseInt(tableauRecueil.length/(nbJours)); 
                    backgroundPm10[i] = 'rgba(255, 99, 132, 0.2)';
                    borderPm10[i] = 'rgba(255, 99, 132, 1)';
                    debut = fin;
                    fin+=parseInt(tableauRecueil.length/(nbJours));
                }
            }


            
            var tableauRecueil2= Array();
            var i =0;
            '{% for rel in relevesPm25 %}'
                '{% for r in rel %}'
                       tableauRecueil2[i]='{{r}}';
                       i++;
                '{% endfor %}'
            '{% endfor %}'
            if(tableauRecueil2 != ""){
                for(var i=0;i<=nbJours;i++){
                    relevesPm25[i]=0;
                }
                debut = 0;
                fin = parseInt(tableauRecueil2.length/(nbJours));
                for(i=0;i<=nbJours;i++){
                    for(var j=debut;j<fin;j++){
                            relevesPm25[i]+=parseInt(tableauRecueil2[j]);
                    }
                    relevesPm25[i] = parseInt(relevesPm25[i])/parseInt(tableauRecueil2.length/(nbJours));
                    backgroundPm25[i] = 'rgba(99, 255, 132, 0.2)';
                    borderPm25[i] = 'rgba(99, 255, 132, 0.2)';
                    debut=fin;
                    fin+=parseInt(tableauRecueil2.length/(nbJours));
                }
            }
       }
       /* Présentation en mois sinon */
       else{
           
           //création du tableau des labels 
           var jourDebut = indice.substring(2,4);
           var moisDebut = indice.substring(0,2);
           var nbMois = '{{dateFin}}'.substring(0,2)-'{{dateDebut}}'.substring(0,2) +1;
           
           for(var i = 0; i < nbMois; i++){
            labels[i] = "le mois : " + moisDebut;
                moisDebut++;
                if(moisDebut<10){
                    moisDebut = '0' + moisDebut;
                }
            }
            
            
            var i = 0;
            '{% for rel in relevesPm10 %}'
                '{% for r in rel %}'
                    relevesPm10[i]='{{r}}';
                    backgroundPm10[i] = 'rgba(255, 99, 132, 0.2)';
                    borderPm10[i] = 'rgba(255, 99, 132, 1)';
                    i++;
                '{% endfor %}'
            '{% endfor %}'
            
            var i=0;
            '{% for rel in relevesPm25 %}'
                '{% for r in rel %}'
                    relevesPm25[i]='{{r}}';
                    backgroundPm25[i] = 'rgba(99, 255, 132, 0.2)';
                    borderPm25[i] = 'rgba(99, 255, 132, 0.2)';
                    i++;
                '{% endfor %}'
            '{% endfor %}'
           
       }
      
        //gestion des couleurs pour les graph secteur, donut et polaire
        if('{{ typeGraphique }}' == 'pie' || '{{ typeGraphique }}' == 'doughnut' || '{{ typeGraphique }}' == 'polarArea'){
            
            var r = 255;
            var v = 99;
            var b = 132;
            for(var i=0;i<backgroundPm10.length;i++){
                backgroundPm10[i] = 'rgba('+r+','+v+','+b+', 0.2)';
                borderPm10[i] = 'rgba('+r+','+v+','+b+', 1)';
                backgroundPm25[i] = 'rgba('+r+','+v+','+b+', 0.2)';
                borderPm25[i] = 'rgba('+r+','+v+','+b+', 1)';
                r = Math.floor(Math.random() * Math.floor(255));
                v = Math.floor(Math.random() * Math.floor(255));
                b = Math.floor(Math.random() * Math.floor(255));
            }
           
            Chart.pluginService.register({
            beforeDraw: function (chart) {
                if (chart.options.centertext) {
                    var width = chart.chart.width,
                            height = chart.chart.height,
                            ctx = chart.chart.ctx;

                    ctx.restore();
                    var fontSize = (height / 700).toFixed(2); 
                    ctx.font = fontSize + "em sans-serif";
                    ctx.textBaseline = "middle";

                    var text = chart.options.centertext, // "75%",
                            textX = Math.round((width - ctx.measureText(text).width) / 2),
                            textY = height / 2 - (chart.titleBlock.height - 15);

                    ctx.fillText(text, textX, textY);
                    ctx.save();
                }
            }
            });
        }


       //création des graphiques en fonction de la particule sélectionnée
        if(relevesPm10 != ""  && relevesPm25 != ""){
         var myChart = new Chart(ctx, {
            type: '{{ typeGraphique }}',
            data: {
                labels: labels,
                datasets: [{
                    label: "PM 10",
                    data: relevesPm10, 
                    backgroundColor: backgroundPm10,
                    borderColor: borderPm10,
                },
                {
                    label: "PM 2.5",
                    data: relevesPm25, 
                    backgroundColor: backgroundPm25,
                    borderColor: borderPm25,
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }    
                    }]
                },
                responsive: true,
                title: {
                    display: true,
                    position: "bottom",
                    text: '{{titre}}'
                },
                legend: {
                    display: true
                },
                centertext: "PM2,5 au centre et PM10 en périphérie"
                }
            });
        }
        else if(relevesPm10 == "" ){
            var myChart = new Chart(ctx, {
            type: '{{ typeGraphique }}',
            data: {
                labels: labels,
                datasets: [
                {
                    label: "PM 2.5",
                    data: relevesPm25, 
                    backgroundColor: backgroundPm25,
                    borderColor: borderPm25,
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }    
                    }]
                 },
                 responsive: true,
                 title: {
                    display: true,
                    position: "bottom",
                    text: '{{titre}}'
                },
                legend: {
                    display: true
                },
                centertext: "PM25"
                
            }
            });
        }
        else{
            var myChart = new Chart(ctx, {
            type: '{{ typeGraphique }}',
            data: {
                labels: labels,
                datasets: [
                {
                    label: "PM 10",
                    data: relevesPm10, 
                    backgroundColor: backgroundPm10,
                    borderColor: borderPm10,
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                    ticks: {
                        beginAtZero: true
                        
                        
                    }    
                    }]
                 },
                 responsive: true,
                 title: {
                    display: true,
                    position: "bottom",
                    text: '{{titre}}'
                },
                legend: {
                    display: true
                },
                centertext: "PM10"
                
            }
            });
        }
    
         
    </script>


    
   
                </div>
            </div>
            
            <div class="col-lg-12 mt-5">
                <div class="d-flex justify-content-end">
                    <div class="">
                        {{ form_widget(selectionFiltres.Modifier, {'attr': {'class': 'button-custom'}}) }}
                    </div>    
                  {{form_end(selectionFiltres)}} 
                    <div class="ml-3">
                        <button class="btn  button-custom" onclick="exporter()">Exporter le graphique</button>
                    </div>
                </div>
            </div>

        </div>
    </div>


{% endblock %}



{% block javascripts %}
    {{ encore_entry_script_tags('page-graphique') }}

    <script>
        function exporter() {
        var graphique = document.getElementById('myChart');
        var urlImage = graphique.toDataURL();

        window.open(urlImage,'_blank', null);
    }

</script>
{% endblock %}